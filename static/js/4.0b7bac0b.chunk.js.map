{"version":3,"sources":["server/fetch.ts","client/components/header/header.tsx","client/components/footer/footer.tsx","client/components/form/error.tsx","client/components/todo-action/todo-form/todo-form.tsx","client/context/todo-context.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","client/components/modal/modal.tsx","client/components/todo-action/todo-add/todo-add.tsx","client/pages/List.tsx"],"names":["DOMAIN_API","Urls","list","add","remove","id","edit","Fetch","getList","fetch","title","method","headers","body","JSON","stringify","task","onRemoveHandler","response","success","console","error","log","onCatchHandler","operation","alert","details","Header","props","className","children","Footer","Error","TodoForm","onSubmit","htmlFor","name","type","value","onChange","btnSubmit","TodoContext","React","createContext","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","_classCallCheck","instance","Constructor","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_typeof2","obj","constructor","_typeof","_possibleConstructorReturn","self","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","Modal","state","isOpen","open","setState","close","this","btnOpen","modalTitle","onClick","data-testid","caption","icon","faTimes","Component","defaultProps","TodoAdd","modal","createRef","event","preventDefault","current","ref","TodoList","lazy","List","useState","tasks","setTasks","callback","then","json","catch","useEffect","data","Provider","filter","Suspense","fallback","center","classes"],"mappings":"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","file":"static/js/4.0b7bac0b.chunk.js","sourcesContent":["import { ITask } from '../client/interfaces';\r\n\r\n// TODO: to lib (--isolatedModules: false)\r\n\r\n/**\r\n * Библиотека по получению данных с сервера\r\n * @library server/fetch\r\n * @includes BaseResponse server/BaseResponse\r\n * @includes AddResponse server/AddResponse\r\n * @includes ListResponse server/ListResponse\r\n * @includes RemoveResponse server/RemoveResponse\r\n * @includes Fetch server/_fetch/fetch\r\n * @author Азин И.А.\r\n */\r\n\r\n/**\r\n * @interface server/BaseResponse\r\n * @author Азин И.А.\r\n */\r\nexport interface BaseResponse {\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\n/**\r\n  * @interface server/AddResponse\r\n  * @author Азин И.А.\r\n  */\r\nexport interface AddResponse extends BaseResponse {\r\n    id: number\r\n}\r\n\r\n/**\r\n  * @interface server/ListResponse\r\n  * @author Азин И.А.\r\n  */\r\nexport interface ListResponse extends BaseResponse {\r\n    data: ITask[],\r\n    length: number,\r\n}\r\n\r\n/**\r\n  * @interface server/RemoveResponse\r\n  * @author Азин И.А.\r\n  */\r\nexport interface RemoveResponse extends BaseResponse {\r\n}\r\n\r\n/**\r\n  * @interface server/CallbackResponse\r\n  * @author Азин И.А.\r\n  */\r\nexport interface CallbackResponse {\r\n    (response: BaseResponse): void;\r\n}\r\n\r\ntype Operation = 'list' | 'add' | 'remove' | 'edit';\r\n\r\nconst DOMAIN_API = 'https://test.megapolis-it.ru/api';\r\nconst Urls = {\r\n    list: `${DOMAIN_API}/list`,\r\n    add: `${DOMAIN_API}/list`,\r\n    remove(id: number) { return `${DOMAIN_API}/list/${id}` },\r\n    edit(id: number) { return `${DOMAIN_API}/list/${id}` },\r\n}\r\n\r\n/**\r\n * Синглтон-контроллер по получению данных о задачах с сервера\r\n * @class server/Fetch\r\n * @singletone\r\n * @author Азин И.А.\r\n */\r\nconst Fetch = {\r\n    /**\r\n     * Получения списка\r\n     * @remark\r\n     * Описание: Метод вернёт список всех задач\r\n     * url: https://test.megapolis-it.ru/api/list\r\n     * type: GET\r\n     * Модель: Object<data: Array, length: Number, success: Bool, error: String>\r\n     */\r\n    getList() {\r\n        return fetch(Urls.list);\r\n    },\r\n    /**\r\n     * Создание задачи\r\n     * @remark\r\n     * Описание: Метод создаст новую запись и вернет ее идентификатор\r\n     * url: https://test.megapolis-it.ru/api/list\r\n     * type: POST\r\n     * Модель(Request): Object<title: String>\r\n     * Модель(Response): Object<id: Number, success: Bool, error: String>\r\n     */\r\n    add(title: string) {\r\n        return fetch(Urls.add, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                title\r\n            }),\r\n        });\r\n    },\r\n    /**\r\n     * Удаление задачи\r\n     * @remark\r\n     * Описание: Метод удаляет запись\r\n     * url: https://test.megapolis-it.ru/api/list/{ID}\r\n     * type: DELETE\r\n     * Модель(Response): Object<success: Bool, error: String>\r\n     */\r\n    remove(id: number) {\r\n        return fetch(Urls.remove(id), {\r\n            method: 'DELETE',\r\n        });\r\n    },\r\n    /**\r\n     * Редактирование задачи\r\n     * @remark\r\n     * Описание: Метод изменит данные\r\n     * url: https://test.megapolis-it.ru/api/list/{ID}\r\n     * type: POST\r\n     * Модель(Request): Object<title: String>\r\n     * Модель(Response): Object<success: Bool, error: String>\r\n     */\r\n    edit(task: ITask) {\r\n        return fetch(Urls.edit(task.id), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                title: task.title\r\n            }),\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n  * @function onRemoveHandler\r\n  * @author Азин И.А.\r\n  */\r\nexport function onRemoveHandler(response: BaseResponse) {\r\n    if (!response.success) {\r\n        console.error(response.error) // \"Объект не найден\"\r\n        console.log('Но обычный клиент не сможет добиться такой ситуации, т.к. для этого придется удалить несуществующее задание :)')\r\n    }\r\n}\r\n\r\n/**\r\n  * @function onCatchHandler\r\n  * @author Азин И.А.\r\n  */\r\nexport function onCatchHandler(operation: Operation) {\r\n    const message = 'Внутренняя ошибка сервера.';\r\n    const details = () => {\r\n        switch (operation) {\r\n            case 'list':\r\n                return 'Попробуйте зайти на страницу позднее';\r\n            case 'add':\r\n                return 'Попробуйте добавить задачу позднее'\r\n            case 'edit':\r\n                return 'Попробуйте редактировать задачу позднее'\r\n            case 'remove':\r\n                return 'Попробуйте удалить задачу позднее';\r\n        }\r\n    }\r\n    alert(`${message}\\r\\n${details()}`)\r\n}\r\n\r\n\r\nexport default Fetch;","import React, { ReactNode } from 'react'\r\nimport './header.scss'\r\n\r\ninterface IProps {\r\n    title: string;\r\n    children: ReactNode;\r\n}\r\n\r\n/**\r\n * Хедер\r\n * @class components/header/header\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst Header = (props: IProps) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__title\">\r\n                <h1>{ props.title }</h1>\r\n            </div>\r\n            <div className=\"header__action\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport './footer.scss'\r\n\r\n/**\r\n * Футер с копирайтом\r\n * @class Footer\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            © 2019 АО \"Мегаполис\"\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n    error?: string\r\n}\r\n\r\n/**\r\n * Компонент ошибки\r\n * @remark\r\n * Используется для отрисовки ошибок в формах\r\n * @class components/form/error\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst Error = ({ error = '' }: IProps) => {\r\n    return (\r\n        <div className=\"form-error\">\r\n            {error}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { FormEvent, ChangeEvent } from 'react'\r\nimport Error from '../../form/error'\r\n\r\ninterface IProps {\r\n    onSubmit(event: FormEvent<HTMLFormElement>): void;\r\n    onChange(event: ChangeEvent<HTMLInputElement>): void;\r\n    value: string;\r\n    btnSubmit?: JSX.Element;\r\n    initialTitle?: string;\r\n    error?: string;\r\n}\r\n\r\n/**\r\n * Форма для работы с моделью задачи\r\n * @class components/todo-action/todo-form/todo-form\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst TodoForm = (props: IProps) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"form-label\" htmlFor=\"title\">Краткое описание</label>\r\n                <input \r\n                    className=\"form-input\" name=\"title\" type=\"text\"\r\n                    value={props.value} onChange={props.onChange}\r\n                />\r\n                <Error error={props.error}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                {props.btnSubmit || <button type=\"submit\" className=\"btn btn_primary btn_alt-border btn_alt-color\">Создать</button>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React from 'react'\r\nimport { CallbackResponse } from '../../server/fetch';\r\n\r\n/**\r\n * Интерфейс метода по добавлению задачи\r\n * @interface context/todo-context/AddContext\r\n * @author Азин И.А.\r\n */\r\nexport interface AddContext {\r\n    add(title: string, callback: CallbackResponse): void;\r\n}\r\n\r\n/**\r\n * Интерфейс метода по удалению задачи\r\n * @interface context/todo-context/RemoveContext\r\n * @author Азин И.А.\r\n */\r\nexport interface RemoveContext {\r\n    remove(id: number, callback: CallbackResponse): void;\r\n}\r\n\r\n/**\r\n * Интерфейс контекста\r\n * @interface context/todo-context/IContext\r\n * @author Азин И.А.\r\n */\r\nexport interface IContext extends AddContext, RemoveContext {\r\n}\r\n\r\n/**\r\n * Синглтон контекста\r\n * @class context/todo-context/TodoContext\r\n * @singletone\r\n * @public\r\n * @author Азин И.А.\r\n */\r\nconst TodoContext = React.createContext<IContext>({\r\n    add(title: string) { throw new Error(\"ADD: not implemented!\") },\r\n    remove(id: number) { throw new Error(\"REMOVE: not implemented!\") },\r\n});\r\n\r\nexport default TodoContext;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import React, { ReactNode } from 'react'\r\nimport './modal.scss'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\ninterface IProps {\r\n    btnOpen: {\r\n        className: string,\r\n        caption: string;\r\n    };\r\n    modalTitle: string;\r\n    children: ReactNode;\r\n}\r\n\r\ninterface IState {\r\n    isOpen: boolean;\r\n}\r\n\r\n/**\r\n * Модальное окно\r\n * @class components/modal/modal\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\n\r\nexport default class Modal extends React.Component<IProps, IState> {    \r\n    static defaultProps: IProps = {\r\n        btnOpen: {\r\n            className: \"\",\r\n            caption: \"Open\"\r\n        },\r\n        modalTitle: \"Modal title\",\r\n        children: <></>\r\n    }\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    open = () => {\r\n        this.setState({ isOpen: true })\r\n    }\r\n\r\n    close = () => {\r\n        this.setState({ isOpen: false })\r\n    }\r\n\r\n    render() {\r\n        const {btnOpen, modalTitle} = this.props;\r\n        return (\r\n            <>\r\n                <button className={btnOpen.className} onClick={this.open} data-testid=\"modal-open-btn\">\r\n                    {btnOpen.caption}\r\n                </button>\r\n\r\n                {this.state.isOpen && (\r\n                    <div className='modal' data-testid=\"modal\">\r\n                        <div className='modal-wrapper'>\r\n                            <div className=\"modal-bar\">\r\n                                <button\r\n                                    className=\"btn btn_danger btn_square modal-close\"\r\n                                    onClick={this.close}\r\n                                    data-testid=\"modal-close-btn\"\r\n                                >\r\n                                    <FontAwesomeIcon icon={faTimes} />\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\" data-testid=\"modal-header\">\r\n                                    <h1>{modalTitle}</h1>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    {this.props.children}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { FormEvent, ChangeEvent } from 'react'\r\nimport Modal from '../../modal/modal'\r\nimport TodoForm from '../todo-form/todo-form'\r\nimport { BaseResponse } from '../../../../server/fetch';\r\nimport { AddContext } from '../../../context/todo-context';\r\n\r\ninterface IProps extends AddContext {\r\n}\r\n\r\n/**\r\n * Форма добавления задачи\r\n * @class components/todo-action/todo-add/todo-add\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nclass TodoAdd extends React.Component<IProps> {\r\n    state = {\r\n        value: '',\r\n        error: ''\r\n    }\r\n\r\n    modal = React.createRef<Modal>();\r\n\r\n    onSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        this.props.add(this.state.value, (response: BaseResponse) => {\r\n            if (response.success) {\r\n                this.modal.current?.close();\r\n                this.setState({\r\n                    value: ''\r\n                })\r\n                return;\r\n            }\r\n    \r\n            this.setState({\r\n                error: response.error\r\n            })\r\n        });\r\n    }\r\n\r\n    onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                btnOpen={{ caption: \"Добавить\", className: \"btn btn_success btn_alt-color btn_wide\" }}\r\n                modalTitle=\"\"\r\n                ref={this.modal}\r\n            >\r\n                <TodoForm\r\n                    onSubmit={this.onSubmit}\r\n                    onChange={this.onChange}\r\n                    value={this.state.value}\r\n                    error={this.state.error}\r\n                />\r\n            </Modal>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default TodoAdd\r\n","import React from 'react'\r\nimport { ITask } from '../interfaces'\r\nimport Header from '../components/header/header'\r\n// import TodoList from '../components/todo-list/todo-list'\r\nimport TodoContext from '../context/todo-context'\r\nimport Footer from '../components/footer/footer'\r\nimport TodoAdd from '../components/todo-action/todo-add/todo-add'\r\nimport Fetch, { ListResponse, AddResponse, CallbackResponse, onCatchHandler } from '../../server/fetch'\r\nimport Loader from '../components/loader/loader'\r\n\r\n\r\nconst TodoList = React.lazy(() => import('../components/todo-list/todo-list'));\r\n\r\n/**\r\n * Компонент страницы \"Список задач\"\r\n * @class pages/List\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst List = () => {\r\n    const [tasks, setTasks] = React.useState<ITask[]>([]);\r\n\r\n    React.useEffect(getList, []);\r\n\r\n    function getList() {\r\n        Fetch.getList()\r\n            .then(response => response.json())\r\n            .then((response: ListResponse) => {\r\n                if (response.success) {\r\n                    setTasks(response.data)\r\n                }\r\n            }).catch(() => {\r\n                onCatchHandler('list')\r\n            });\r\n\r\n    }\r\n    function add(title: string, callback: CallbackResponse) {\r\n        Fetch.add(title)\r\n            .then((response) => response.json())\r\n            .then((response: AddResponse) => {\r\n                if (response.success) {\r\n                    setTasks([...tasks, {\r\n                        title,\r\n                        id: response.id,\r\n                    }])\r\n                }\r\n                callback(response);\r\n            }).catch(() => {\r\n                onCatchHandler('add')\r\n            });\r\n    }\r\n\r\n    // test-case: remove(999, onRemoveError);\r\n    function remove(id: number, callback: CallbackResponse) {\r\n        Fetch.remove(id)\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                if (response.success) {\r\n                    setTasks(tasks.filter(\r\n                        task => task.id !== id\r\n                    ));\r\n                }\r\n                callback(response);\r\n            }).catch(() => {\r\n                onCatchHandler('remove')\r\n            });;\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider value={{ add, remove }}>\r\n            <div className='wrapper'>\r\n                <Header title=\"Список задач\">\r\n                    <TodoAdd add={add} />\r\n                </Header>\r\n                <div className=\"main\">\r\n                    <React.Suspense fallback={<Loader center={true} />}>\r\n                        <TodoList classes=\"app__todo-list\" tasks={tasks} />\r\n                    </React.Suspense>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default List;\r\n"],"sourceRoot":""}