{"version":3,"sources":["server/fetch.ts","client/components/header/header.tsx","client/components/footer/footer.tsx","client/components/form/error.tsx","client/components/todo-action/todo-form/todo-form.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","client/components/todo-action/todo-edit/todo-edit.tsx","client/pages/Edit.tsx"],"names":["DOMAIN_API","Urls","list","add","remove","id","edit","Fetch","getList","fetch","title","method","headers","body","JSON","stringify","task","onRemoveHandler","response","success","console","error","log","onCatchHandler","operation","alert","details","Header","props","className","children","Footer","Error","TodoForm","onSubmit","htmlFor","name","type","value","onChange","btnSubmit","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","TodoEdit","setReturnToList","React","useState","setValue","changed","setChanged","event","preventDefault","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","then","json","catch","actualValue","to","Edit","match","params","setTask","loading","setLoading","returnToList","useEffect","data","find","Suspense","fallback","center","onClick","icon","faTrashAlt"],"mappings":"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","file":"static/js/5.b2bed8e2.chunk.js","sourcesContent":["import { ITask } from '../client/interfaces';\r\n\r\n// TODO: to lib (--isolatedModules: false)\r\n\r\n/**\r\n * Библиотека по получению данных с сервера\r\n * @library server/fetch\r\n * @includes BaseResponse server/BaseResponse\r\n * @includes AddResponse server/AddResponse\r\n * @includes ListResponse server/ListResponse\r\n * @includes RemoveResponse server/RemoveResponse\r\n * @includes Fetch server/_fetch/fetch\r\n * @author Азин И.А.\r\n */\r\n\r\n/**\r\n * @interface server/BaseResponse\r\n * @author Азин И.А.\r\n */\r\nexport interface BaseResponse {\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\n/**\r\n  * @interface server/AddResponse\r\n  * @author Азин И.А.\r\n  */\r\nexport interface AddResponse extends BaseResponse {\r\n    id: number\r\n}\r\n\r\n/**\r\n  * @interface server/ListResponse\r\n  * @author Азин И.А.\r\n  */\r\nexport interface ListResponse extends BaseResponse {\r\n    data: ITask[],\r\n    length: number,\r\n}\r\n\r\n/**\r\n  * @interface server/RemoveResponse\r\n  * @author Азин И.А.\r\n  */\r\nexport interface RemoveResponse extends BaseResponse {\r\n}\r\n\r\n/**\r\n  * @interface server/CallbackResponse\r\n  * @author Азин И.А.\r\n  */\r\nexport interface CallbackResponse {\r\n    (response: BaseResponse): void;\r\n}\r\n\r\ntype Operation = 'list' | 'add' | 'remove' | 'edit';\r\n\r\nconst DOMAIN_API = 'https://test.megapolis-it.ru/api';\r\nconst Urls = {\r\n    list: `${DOMAIN_API}/list`,\r\n    add: `${DOMAIN_API}/list`,\r\n    remove(id: number) { return `${DOMAIN_API}/list/${id}` },\r\n    edit(id: number) { return `${DOMAIN_API}/list/${id}` },\r\n}\r\n\r\n/**\r\n * Синглтон-контроллер по получению данных о задачах с сервера\r\n * @class server/Fetch\r\n * @singletone\r\n * @author Азин И.А.\r\n */\r\nconst Fetch = {\r\n    /**\r\n     * Получения списка\r\n     * @remark\r\n     * Описание: Метод вернёт список всех задач\r\n     * url: https://test.megapolis-it.ru/api/list\r\n     * type: GET\r\n     * Модель: Object<data: Array, length: Number, success: Bool, error: String>\r\n     */\r\n    getList() {\r\n        return fetch(Urls.list);\r\n    },\r\n    /**\r\n     * Создание задачи\r\n     * @remark\r\n     * Описание: Метод создаст новую запись и вернет ее идентификатор\r\n     * url: https://test.megapolis-it.ru/api/list\r\n     * type: POST\r\n     * Модель(Request): Object<title: String>\r\n     * Модель(Response): Object<id: Number, success: Bool, error: String>\r\n     */\r\n    add(title: string) {\r\n        return fetch(Urls.add, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                title\r\n            }),\r\n        });\r\n    },\r\n    /**\r\n     * Удаление задачи\r\n     * @remark\r\n     * Описание: Метод удаляет запись\r\n     * url: https://test.megapolis-it.ru/api/list/{ID}\r\n     * type: DELETE\r\n     * Модель(Response): Object<success: Bool, error: String>\r\n     */\r\n    remove(id: number) {\r\n        return fetch(Urls.remove(id), {\r\n            method: 'DELETE',\r\n        });\r\n    },\r\n    /**\r\n     * Редактирование задачи\r\n     * @remark\r\n     * Описание: Метод изменит данные\r\n     * url: https://test.megapolis-it.ru/api/list/{ID}\r\n     * type: POST\r\n     * Модель(Request): Object<title: String>\r\n     * Модель(Response): Object<success: Bool, error: String>\r\n     */\r\n    edit(task: ITask) {\r\n        return fetch(Urls.edit(task.id), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                title: task.title\r\n            }),\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n  * @function onRemoveHandler\r\n  * @author Азин И.А.\r\n  */\r\nexport function onRemoveHandler(response: BaseResponse) {\r\n    if (!response.success) {\r\n        console.error(response.error) // \"Объект не найден\"\r\n        console.log('Но обычный клиент не сможет добиться такой ситуации, т.к. для этого придется удалить несуществующее задание :)')\r\n    }\r\n}\r\n\r\n/**\r\n  * @function onCatchHandler\r\n  * @author Азин И.А.\r\n  */\r\nexport function onCatchHandler(operation: Operation) {\r\n    const message = 'Внутренняя ошибка сервера.';\r\n    const details = () => {\r\n        switch (operation) {\r\n            case 'list':\r\n                return 'Попробуйте зайти на страницу позднее';\r\n            case 'add':\r\n                return 'Попробуйте добавить задачу позднее'\r\n            case 'edit':\r\n                return 'Попробуйте редактировать задачу позднее'\r\n            case 'remove':\r\n                return 'Попробуйте удалить задачу позднее';\r\n        }\r\n    }\r\n    alert(`${message}\\r\\n${details()}`)\r\n}\r\n\r\n\r\nexport default Fetch;","import React, { ReactNode } from 'react'\r\nimport './header.scss'\r\n\r\ninterface IProps {\r\n    title: string;\r\n    children: ReactNode;\r\n}\r\n\r\n/**\r\n * Хедер\r\n * @class components/header/header\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst Header = (props: IProps) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__title\">\r\n                <h1>{ props.title }</h1>\r\n            </div>\r\n            <div className=\"header__action\">\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport './footer.scss'\r\n\r\n/**\r\n * Футер с копирайтом\r\n * @class Footer\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            © 2019 АО \"Мегаполис\"\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n    error?: string\r\n}\r\n\r\n/**\r\n * Компонент ошибки\r\n * @remark\r\n * Используется для отрисовки ошибок в формах\r\n * @class components/form/error\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst Error = ({ error = '' }: IProps) => {\r\n    return (\r\n        <div className=\"form-error\">\r\n            {error}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { FormEvent, ChangeEvent } from 'react'\r\nimport Error from '../../form/error'\r\n\r\ninterface IProps {\r\n    onSubmit(event: FormEvent<HTMLFormElement>): void;\r\n    onChange(event: ChangeEvent<HTMLInputElement>): void;\r\n    value: string;\r\n    btnSubmit?: JSX.Element;\r\n    initialTitle?: string;\r\n    error?: string;\r\n}\r\n\r\n/**\r\n * Форма для работы с моделью задачи\r\n * @class components/todo-action/todo-form/todo-form\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst TodoForm = (props: IProps) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"form-label\" htmlFor=\"title\">Краткое описание</label>\r\n                <input \r\n                    className=\"form-input\" name=\"title\" type=\"text\"\r\n                    value={props.value} onChange={props.onChange}\r\n                />\r\n                <Error error={props.error}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                {props.btnSubmit || <button type=\"submit\" className=\"btn btn_primary btn_alt-border btn_alt-color\">Создать</button>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { ChangeEvent, FormEvent } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { ITask } from '../../../interfaces'\r\nimport TodoForm from '../todo-form/todo-form';\r\nimport Fetch, { onCatchHandler, BaseResponse } from '../../../../server/fetch';\r\n\r\ninterface IProps {\r\n    task: ITask;\r\n    setReturnToList(value: boolean): void;\r\n}\r\n\r\n/**\r\n * Форма редактирования задачи\r\n * @class components/todo-action/todo-edit/todo-edit\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst TodoEdit = ({ task, setReturnToList }: IProps) => {\r\n    const [value, setValue] = React.useState(task.title);\r\n    const [changed, setChanged] = React.useState(false);\r\n\r\n    function onSubmit(event: FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        Fetch.edit({ ...task, title: value })\r\n            .then((response) => response.json())\r\n            .then((response: BaseResponse) => {\r\n                if (response.success) {\r\n                    setReturnToList(true)\r\n                }\r\n            })\r\n            .catch(() => {\r\n                onCatchHandler('edit')\r\n            });;\r\n    }\r\n\r\n    function onChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const actualValue = event.target.value;\r\n        setChanged(value !== actualValue);\r\n        setValue(actualValue);\r\n    }\r\n\r\n    return (\r\n        <TodoForm\r\n            onSubmit={onSubmit}\r\n            onChange={onChange}\r\n            value={value}\r\n            btnSubmit={\r\n                changed ? (\r\n                    <button type=\"submit\" className=\"btn btn_primary btn_alt-border btn_alt-color\">Сохранить</button>\r\n                ) : (\r\n                    <NavLink to=\"/items\">\r\n                        <button className=\"btn btn_primary btn_alt-border btn_alt-color\">Вернуться к списку</button>\r\n                    </NavLink>\r\n                )\r\n            }\r\n        />\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default TodoEdit\r\n","import React from 'react'\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\r\nimport TodoEdit from '../components/todo-action/todo-edit/todo-edit';\r\nimport Header from '../components/header/header';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Footer from '../components/footer/footer';\r\nimport Fetch, { RemoveResponse, onRemoveHandler, ListResponse, onCatchHandler } from '../../server/fetch';\r\nimport Loader from '../components/loader/loader';\r\n\r\n// TODO: strict config!\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\n/**\r\n * Компонент страницы \"Редактирование задачи\"\r\n * @class pages/Edit\r\n * @extends React.Component\r\n * @component\r\n * @author Азин И.А.\r\n */\r\nconst Edit = (props: IProps) => {\r\n    const id: number = +props.match.params.id;\r\n    const [task, setTask] = React.useState({ id: -1, title: '' })\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [returnToList, setReturnToList] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        Fetch.getList()\r\n            .then(response => response.json())\r\n            .then((response: ListResponse) => {\r\n                if (response.success) {\r\n                    setTask(response.data.find((task) => task.id === id)!);\r\n                    setLoading(false);\r\n                    // Можно использовать эту конструкцию вместо прямого `setLoading(false)`, чтобы посмотреть <Loader/>\r\n                    /* setTimeout(() => {\r\n                        setLoading(false);\r\n                    }, 5000) */ \r\n                }\r\n            }).catch(() => {\r\n                onCatchHandler('list')\r\n            });\r\n    }, []);\r\n\r\n    function onRemove() {\r\n        Fetch.remove(task.id)\r\n            .then((response) => response.json())\r\n            .then((response: RemoveResponse) => {\r\n                if (response.success) {\r\n                    setReturnToList(true);\r\n                }\r\n                onRemoveHandler(response);\r\n            }).catch(() => {\r\n                onCatchHandler('remove')\r\n            });;\r\n    }\r\n\r\n    if (returnToList) {\r\n        return <Redirect to=\"/items\" />\r\n    }\r\n    if (loading) {\r\n        return <div className=\"wrapper\">\r\n            <React.Suspense fallback={<Loader center={true}/>}>\r\n                <Header title=\"Задание №\">\r\n                </Header>\r\n                <div className=\"main\">\r\n                </div>\r\n            </React.Suspense>\r\n        </div>\r\n    }\r\n    return (\r\n        <div className='wrapper'>\r\n            <Header title={`Задание №${task.id}`}>\r\n                <button className=\"btn btn_success btn_alt-color btn_wide\" onClick={onRemove}>\r\n                    Удалить\r\n                    &nbsp;\r\n                    <FontAwesomeIcon icon={faTrashAlt} className=\"fa-icon\" />\r\n                </button>\r\n            </Header>\r\n            <div className=\"main\">\r\n                <TodoEdit task={task} setReturnToList={setReturnToList} />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit;\r\n"],"sourceRoot":""}